// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

// #includeのあとのあたりにスクロール量変更の定義を追記

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        // combosやmacrosと同じ階層に以下のbihaviorsを追記
        // スクロール方向を逆にしたい場合は <&msc SCRL_DOWN> と <&msc SCRL_UP> を入れ替えてください

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                 &kp W         &kp E         &kp R                   &kp T                                                        &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&mt LC(LEFT_SHIFT) A  &kp S         &kp D         &kp F                   &kp G      &kp LS(LG(S))                      &kp MINUS      &kp H        &kp J  &kp K      &kp L    &kp SQT
&mt LEFT_SHIFT Z      &kp X         &kp C         &kp V                   &kp B      &lt_to_layer_0 6 INT_MUHENKAN      &kp SEMICOLON  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL             &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 1 GRAVE  &lt 4 TAB  &lt_to_layer_0 3 SPACE             &kp BACKSPACE  &lt 2 ENTER                             &kp DEL
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                     &none           &none           &none            &none  &none
&trans  &trans  &trans  &trans  &trans  &trans      &none  &none           &kp UP_ARROW    &none            &none  &none
&trans  &trans  &trans  &trans  &trans  &trans      &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &none
&trans  &trans  &trans  &trans  &trans  &trans      &none  &none                                                   &none
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        NUM {
            bindings = <
&kp UNDER   &kp COLON          &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9                                       &none               &none               &none                &none  &none
&kp PERIOD  &kp MINUS          &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &none                 &none          &none               &kp LG(UP_ARROW)    &none                &none  &none
&kp COMMA   &kp DOUBLE_QUOTES  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp SINGLE_QUOTE      &none          &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)  &none  &none
&kp PLUS    &kp SLASH          &kp KP_NUMBER_0  &kp DEL          &kp BACKSPACE    &kp ENTER             &kp BACKSPACE  &none                                                               &none
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                                 &kp EXCLAMATION  &kp AT         &kp HASH      &kp DOLLAR            &kp PERCENT
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &kp LEFT_BRACKET  &kp CARET        &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &kp DOWN_ARROW    &trans           &trans         &trans        &trans                &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans            &trans                                                              &trans
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        MOUSE {
            bindings = <
&kp F1            &kp F2        &kp F3          &kp F4              &kp F5                                 &none     &none     &none     &none  &none
&kp F6            &kp F7        &kp F8          &kp F9              &kp F10              &none      &none  &mkp MB5  &mkp MB1  &mkp MB2  &none  &kp RIGHT_CONTROL
&kp F11           &kp F12       &none           &kp LG(LEFT_ARROW)  &kp LG(RIGHT_ARROW)  &none      &none  &mkp MB4  &none     &none     &none  &none
&kp LEFT_CONTROL  &kp LEFT_GUI  &kp LEFT_SHIFT  &none               &none                &none      &none  &none                                &none
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };
    };
};
